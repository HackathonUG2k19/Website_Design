{"version":3,"sources":["components/Taskbar.js","responses/commands/ls.js","responses/commands/sudo.js","responses/commands/clear.js","responses/commands/cat.js","responses/commands/cd.js","responses/commands/help.js","responses/commands/fallthrough.js","responses/commands/exit.js","responses/commands/rickroll.js","responses/Response.js","components/CLI.js","components/TerminalWindow.js","App.js","serviceWorker.js","index.js"],"names":["Taskbar","className","this","props","visibility","Component","ls","sudo","clear","cat","name","href","onClick","e","preventDefault","cd","dirName","help","fallthrough","command","exit","rickroll","Response","match","fileName","split","window","open","CLI","state","page","response","placeholder","handleChange","setState","target","value","handleSubmit","shiftFocus","document","querySelector","focus","src","alt","onSubmit","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","autoFocus","onChange","React","TerminalWindow","intro_hidden","bg_color","redPill","bluePill","location","Fragment","class","style","height","backgroundColor","color","App","Helmet","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e833bda.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Taskbar extends Component {\n    render() { \n        return (\n            <div className={'Taskbar container rounded shadow ' + this.props.visibility}>\n                <div className='row tb-bg pt-1 pb-1 pl-2 rounded-top'>\n                    <span className='action-buttons'>\n                        <button className='rounded-circle ml-1 tb-close' /> &thinsp;\n                        <button className='rounded-circle mx-1 tb-min d-none d-md-inline' /> &thinsp;\n                        <button className='rounded-circle mr-1 tb-max d-none d-md-inline' />\n                    </span>\n                    <h6 className='text-white m-auto tb-header pr-3'> HackathonUG2k19 </h6>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Taskbar;","import React from 'react';\n\nconst ls = () => {\n    return (\n        <ul className='ls-list p-0'>\n            <li className='d-inline mr-3'>guidelines.txt</li>\n            <li className='d-inline mr-3'>mentors.txt</li>\n            <li className='d-inline mr-3'>prizes.txt</li>\n            <li className='d-inline mr-3'>submission.txt</li>\n            <li className='d-inline mr-3'>teams.txt</li>\n            <li className='d-inline mr-3'>theme.txt</li>\n        </ul>\n    )\n}\n\nexport default ls;\n","import React from 'react';\n\nconst sudo = () => {\n    return (\n        <div>\n            <div className='text-warning'>\n                <p>We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things:</p>\n                <ul className='sudo-list'>\n                    <li>#1) Respect the privacy of others.</li>\n                    <li>#2) Think before you type.</li>\n                    <li>#3) With great power comes great responsibility.</li>\n                </ul>\n            </div>\n            <div className='text-danger'>\n                <p>You are not in the list of sudoers.</p>\n                <p>We'll tell Apex about this!</p>\n                <p className='custom-message'>Note from the Developers: We're Not Comfortable</p>\n            </div>\n        </div>\n    )\n}\n\nexport default sudo;\n","import React from 'react';\n\nconst clear = () => {\n    return (<span></span>)\n};\n\nexport default clear;\n","import React from 'react';\n\nconst cat = name => {\n\tif (name === 'guidelines.txt')\n\t\treturn (\n\t\t\t<div className='Guidelines pr-2'>\n\t\t\t\t<h1 className='my-1'>Guidelines</h1>\n\t\t\t\t<ol>\n\t\t\t\t\t<li>Each team must contain 3 - 5 members. Kindly adhere to the limit.</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tUpon registration, each team will be assigned to their specific mentor.\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Mentors shall be there to guide the teams in their projects.</li>\n\t\t\t\t\t\t\t<li>By guide, it is meant that you can ask them for resources and doubts regarding the project itself, but asking them blatantly for help (Eg. in your codes) will not be entertained. Mentors are currently pursuing internships/projects so they will not always be free, but will be very helpful in giving guidelines.</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>You are required to issue your first Pull Request by 1155 hours on 23 May. This is done so as to keep a check on the teams.</li>\n\t\t\t\t\t<li>Copy-Paste of code is allowed, if code is redistributable. On doing so, you must cite them.</li>\n\t\t\t\t\t<li>The coding round would end at 2000 hours on 24 May. Before This, make sure to merge your fork with the main repository in the organization <a href=\"https://github.com/HackathonUG2k19\">github.com/HackathonUG2k19</a>. The last PR before 8 pm on 24 May will be considered.</li>\n\t\t\t\t\t<li>The team is reqired to give a maximum of a 10 minute presentation on their respective projects, which shall be judged. This will be on a pl\tatform like Zoom or  Microsoft teams.</li>\n\t\t\t\t\t<li>Apart From this feel free to join :\n\t\t\t\t\t\t<a className='d-block' href='/' onClick={(e) => e.preventDefault()}>OSDG Discord Link - To Be Announced</a>\n\t\t\t\t\t\t<a className='d-block' href='https://discord.com/invite/gMB2cJR'>Hackathon server discord link</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</div >\n\t\t)\n\telse if (name === 'theme.txt')\n\t\treturn (\n\t\t\t<div className='Theme pr-2'>\n\t\t\t\t<h1 className='my-1'>Theme</h1>\n\t\t\t\t<p>The theme is \"Life @ IIIT-H\" and it reflects everything about IIIT! Feel free to make a software to optimize cab sharing, or to track debts in JC, a Tinder to find roommates or anything cool!\n\t\t\t\tThe important thing to realize is how you can use any language to build cool things to solve real world problems.\n\t\t\t\tYou can use basic skills to build clever solutions like:</p>\n\t\t\t\t<div>\n\t\t\t\t\t<ul className='sublist'>\n\t\t\t\t\t\t<li>A graph-based solution to optimize debts like splitwise.</li>\n\t\t\t\t\t\t<li>Accounting for internships/GSOC/DASA to make them pay more.</li>\n\t\t\t\t\t\t<li>An OJ test-case generator, but generalized for any parameter.</li>\n\t\t\t\t\t\t<li>A food app for David.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<p>These are just examples of the numerous ideas you can build upon. The goal is to enjoy and learn in the process,<br /> and then give and recieve feedback from the other teams.</p>\n\t\t\t</div>\n\t\t)\n\n\telse if (name === 'teams.txt')\n\t\treturn (\n\t\t\t<div className='Teams pr-2'>\n\t\t\t\t<h1 className='my-1'>Teams</h1>\n\t\t\t\t<p>\n\t\t\t\t\tForm teams of 3-5 members, and fill in the form: <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfjwiimXOQOpdp2gkO_lOzjHvOsB2cFs-Q_2Lw4XiBPLVnsIQ/viewform\"> Hackathon Registration</a><br />\n\t\t\t\t\tTry to prioritize similar technologies, and work together to make something cool.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\n\telse if (name === 'submission.txt')\n\t\treturn (\n\t\t\t<div className='Submission'>\n\t\t\t\t<h1 className='my-1'>Submission</h1>\n\t\t\t\t<p>\n\t\t\t\t\tEach team will get a repository in this organization and we recommend working on another working fork in your own account.\n\t\t\t\t\tYou can always merge the two repos in form of a PR, and only the team leader will be able to do this. This should have a\n\t\t\t\t\t\"Readme.md\" file that should be the primary thing that will be presented in the Presentation phase. Further details will be\n\t\t\t\t\tconveyed\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\n\telse if (name === 'prizes.txt')\n\t\treturn (\n\t\t\t<div className='Prizes'>\n\t\t\t\t<h1 className='my-1'>Prizes</h1>\n\t\t\t\t<p>\n\t\t\t\t\tThe real treasure is the friends and skills you learnt on the way! Lmao not really..<br />\n\t\t\t\t\t\tHere are some prizes you could win :</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Awesome T-Shirts by E-Cell</li>\n\t\t\t\t\t<li>Amazing projects to include in your resume</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\telse if (name === 'mentors.txt')\n\t\treturn (\n\t\t\t<div className='Mentors'>\n\t\t\t\t<h1 className='my-1'>Mentors</h1>\n\t\t\t\t<p>\n\t\t\t\t\tHere are the awesome seniors who volunteered to be mentors:\n\t\t\t\t</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Manan Goel</li>\n\t\t\t\t\t<li>Istasis Mishra</li>\n\t\t\t\t\t<li>Devansh Manu</li>\n\t\t\t\t\t<li>Mallika Subramaniam</li>\n\t\t\t\t\t<li>Shraddha Sehgal</li>\n\t\t\t\t\t<li>Aashna Jena</li>\n\t\t\t\t\t<li>Saujas Vadhguru</li>\n\t\t\t\t\t<li>Yoogottam Khandelwal</li>\n\t\t\t\t\t<li>Abhinav Gupta</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>Thanks a lot guys! You're the best!</p>\n\t\t\t</div>\n\t\t)\n\n\telse\n\t\treturn (\n\t\t\t<span className='text-danger'>cat: {name}: No such file<br />\n\t\t\t\tor directory </span>\n\t\t)\n}\n\nexport default cat;\n","import React from 'react';\n\nconst cd = (dirName) => {\n    if (dirName === \"home\" || dirName === \".\" || dirName === \"..\")\n        return (<span></span>);\n    else if (dirName === \"guidelines.txt\" || dirName === \"teams.txt\" || dirName === \"theme.txt\" || dirName === \"submission.txt\" || dirName === \"prizes.txt\")\n        return (<span className='text-danger'>cd: Not a directory: {dirName}</span>)\n    else\n        return (<span className='text-danger'>cd: No such file or folder: {dirName} </span>)\n}\n\nexport default cd;\n","import React from 'react'\n\n\nconst help = () => {\n\treturn (\n\t\t<div className='Help pr-2'>\n\t\t\t<h1 className='my-1 text-primary'>Hasn't being at IIIT taught you anything?</h1>\n\t\t\t<h1 className='text-warning'>(－‸ლ)</h1>\n\t\t\t<ol>\n\t\t\t\t<li>help →  Incase you need help </li>\n\t\t\t\t<li>ls →  See a list of all file names in this directory</li>\n\t\t\t\t<li>cat [filename] →  Print contents of the file to the terminal</li>\n\t\t\t\t<li>clear →  Clear the screen </li>\n\t\t\t</ol>\n\t\t\t<p>******************</p>\n\t\t\t<p className='text-danger'>Feel free to try out other commands you are familiar with :)</p>\n\n\t\t</div>\n\n\t)\n}\n\nexport default help;","import React from 'react';\n\nconst fallthrough = (command) => {\n    return (\n        <div>\n            <span className='text-danger'>Command Not Found: {command}</span>\n            <p className='text-warning'>Try 'help' if you're stuck</p>\n        </div>\n    )\n}\n\nexport default fallthrough;","import React from 'react';\n\nconst exit = () => {\n    return (\n        <span className='text-warning'>Leaving so soon? :(</span>\n    )\n}\n\nexport default exit;","import React from 'react';\n\nconst rickroll = () => {\n    return(\n        <span className='text-primary'>Get Rollin'!</span>\n    )\n}\n\nexport default rickroll;","import ls from './commands/ls';\nimport sudo from './commands/sudo';\nimport clear from './commands/clear';\nimport cat from './commands/cat';\nimport cd from './commands/cd';\nimport help from './commands/help'\nimport fallthrough from './commands/fallthrough';\nimport exit from './commands/exit';\nimport rickroll from './commands/rickroll';\n\nconst Response = (command) => {\n    if (command.match(/^sudo\\D*/))\n        return sudo();\n    else if (command.match(/^ls\\D*/))\n        return ls();\n\n    else if (command.match(/^cat\\D*/)) {\n        const fileName = command.split(' ')[1];\n        return cat(fileName);\n    }\n    else if (command === \"clear\")\n        return clear();\n    else if (command.match(/^cd\\D*/)) {\n        const dirName = command.split(' ')[1];\n        return cd(dirName);\n    }\n    else if (command === \"help\")\n        return help();\n    else if (command === \"exit\")\n        return exit();\n    else if (command === \"rickroll\") {\n        window.open('https://www.youtube.com/watch?v=oHg5SJYRHA0', '_newtab');\n        return rickroll();\n    }\n    else\n        return fallthrough(command.split(' ')[0]);\n}\n\nexport default Response;\n","import React from 'react';\n\nimport Response from '../responses/Response';\n\nclass CLI extends React.Component {\n    state = {\n        page: \"home\",\n        command: \"\",\n        response: <span></span>,\n        placeholder: \"Try 'help' if you need help...\"\n    };\n\n    handleChange = (e) => {\n        this.setState({ command: e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ response: Response(this.state.command) });\n        this.setState({ command: \"\", placeholder: \"\" })\n    }\n    shiftFocus = e => document.querySelector('.command').focus();\n    render() {\n        return (\n            <div className={'CLI container rounded-bottom shadow overflow-auto ' + (this.props.visibility === \"invisible\" ? \"\" : \"h-100\")} onClick={this.shiftFocus}>\n                <div className='row pt-3 justify-content-center'>\n                    <img src='h19_term_header.png' alt='HackathonUG2k19' className=\"img-fluid col-12 col-md-8\"></img>\n                </div>\n                <div className={'row px-3 pt-3 ' + this.props.visibility}>\n                    <form onSubmit={this.handleSubmit} className='col-12 pl-0'>\n                        <span className='col-12 col-md-4 px-0 mr-2'>faccha@hackathonUG2k19: {this.state.page} $</span>\n                        <input type='text' className='command' autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" autoFocus onChange={this.handleChange} value={this.state.command} placeholder={this.state.placeholder} />\n                    </form>\n                </div>\n                <div className=' response row px-3 pb-5 pb-md-1'>\n                    {this.state.response}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CLI;\n","import React, { Component } from 'react';\n\nimport Taskbar from './Taskbar';\nimport CLI from './CLI';\n\nclass TerminalWindow extends Component {\n    state = {\n        intro_hidden: false,\n        bg_color: \"#000\"\n    };\n\n    redPill = () => {\n        this.setState({ intro_hidden: true, bg_color: \"#282c34\" });\n    }\n\n    bluePill = () => {\n        window.location = 'https://www.youtube.com/watch?v=zE7PKRjrid4';\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <div class=\"mainBG\" style={{ height: \"100vh\", backgroundColor: this.state.bg_color }}>\n            <div className='TerminalWindow container-fluid m-0 p-0'>\n                <div className=\"pt-5 d-none d-sm-block d-md-block d-lg-block\">&nbsp;</div>\n                <Taskbar visibility={(this.state.intro_hidden) ? \"\" : \"invisible\"}/>\n                <CLI visibility={(this.state.intro_hidden) ? \"\" : \"invisible\"}/>\n                <div className={\"text-center \" + (this.state.intro_hidden ? \"d-none\" : \"\")}>\n                    <div className=\"m-auto pb-4 container CLI text-left\" style={{ color: \"#eee\" }}>\n                    This is a Hackathon with absolutely no prerequisites apart from basic coding skills and competency in Googling. <br/><br/>\n                    The duration is from 0800 hours on 23rd May to 2000 hours on 24th May, with a presentation by each team at the end.\n                    </div>\n                            <div className=\"pt-4\">\n                                <button onClick={this.redPill} className=\"mx-2 my-2 btn btn-hacc btn-redpill\"> take the red pill </button>\n                                <button onClick={this.bluePill} className=\"mx-2 my-2 btn btn-hacc btn-bluepill\"> take the blue pill </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TerminalWindow;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'jquery';\nimport 'popper.js'\n\nimport TerminalWindow from './components/TerminalWindow'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <style>{\"body{ background-color: #282c34;}\"}</style>\n      </Helmet>\n      <TerminalWindow />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}